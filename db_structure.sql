DROP DATABASE IF EXISTS exam;
CREATE DATABASE exam;

USE exam;

DROP TABLE IF EXISTS countries;
CREATE TABLE countries (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
	name varchar(50) NOT NULL
);

DROP TABLE IF EXISTS cities ;
CREATE TABLE cities (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
	name varchar(50) NOT NULL,
	country_id int UNSIGNED,
	FOREIGN KEY (country_id) REFERENCES  countries(id) ON DELETE RESTRICT
);

DROP TABLE IF EXISTS clients;
CREATE TABLE clients (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
	name varchar(50) NOT NULL,
	birthday date DEFAULT NULL,
	city_id int UNSIGNED DEFAULT NULL,
	created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
	updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	FOREIGN KEY (city_id) REFERENCES  cities(id) ON DELETE RESTRICT
	
);

DROP TABLE IF EXISTS autos;
CREATE TABLE autos (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
	vendor varchar(50) NOT NULL,
	model varchar(50) NOT NULL
);

DROP TABLE IF EXISTS engine_types;
CREATE TABLE engine_types (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
	type_name varchar(15) NOT NULL
);

DROP TABLE IF EXISTS client_auto;
CREATE TABLE client_auto (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
	client_id int UNSIGNED NOT NULL,
	model_id int UNSIGNED NOT NULL,
	odometer int NOT NULL,
	engine_type_id int UNSIGNED NOT NULL,
	engine_volume float(3,1),
	engine_bhp int UNSIGNED NOT NULL,
	car_vin varchar(17) NOT NULL,
	FOREIGN KEY (client_id) REFERENCES  clients(id) ON DELETE RESTRICT,
	FOREIGN KEY (model_id) REFERENCES  autos(id) ON DELETE RESTRICT,
	FOREIGN KEY (engine_type_id) REFERENCES  engine_types(id) ON DELETE RESTRICT
);

DROP TABLE IF EXISTS staff;
CREATE TABLE staff (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
	name varchar(50) NOT NULL,
	hired_at date DEFAULT (CURRENT_DATE + INTERVAL 1 YEAR)
);

DROP TABLE IF EXISTS pricelist;
CREATE TABLE pricelist (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
	name varchar(50) NOT NULL,
	price int NOT NULL
);

DROP TABLE IF EXISTS parts;
CREATE TABLE parts (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
	name varchar(50) NOT NULL,
	model_id int UNSIGNED NOT NULL,
	price int NOT NULL,
	quantity int DEFAULT NULL,
	FOREIGN KEY (model_id) REFERENCES  autos(id) ON DELETE RESTRICT
);

DROP TABLE IF EXISTS orders ;
CREATE TABLE orders (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
	client_id int UNSIGNED NOT NULL,
	auto_id int UNSIGNED NOT NULL,
	service_id int UNSIGNED NOT NULL,
	part_id int UNSIGNED DEFAULT NULL,
	staff_id int UNSIGNED NOT NULL,
	created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
	finished_at DATETIME DEFAULT NULL,
	FOREIGN KEY (client_id) REFERENCES  clients(id) ON DELETE RESTRICT,
	FOREIGN KEY (auto_id) REFERENCES  autos(id) ON DELETE RESTRICT,
	FOREIGN KEY (service_id) REFERENCES  pricelist(id) ON DELETE RESTRICT,
	FOREIGN KEY (part_id) REFERENCES  parts(id) ON DELETE RESTRICT,
	FOREIGN KEY (staff_id) REFERENCES  staff(id) ON DELETE RESTRICT	
);

DROP TRIGGER IF EXISTS bd_discount
CREATE TRIGGER bd_discount AFTER INSERT ON 